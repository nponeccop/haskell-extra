Index: hsbuild/haskell-leksah-server/src/leksah-server-0.14.3.0/src/IDE/Metainfo/SourceCollectorH.hs
===================================================================
--- hsbuild.orig/haskell-leksah-server/src/leksah-server-0.14.3.0/src/IDE/Metainfo/SourceCollectorH.hs
+++ hsbuild/haskell-leksah-server/src/leksah-server-0.14.3.0/src/IDE/Metainfo/SourceCollectorH.hs
@@ -82,10 +82,7 @@ import Data.Text (Text)
 import qualified Data.Text as T (unpack, pack)
 import Data.Monoid ((<>))
 
-#ifdef MIN_VERSION_haddock_leksah
-#else
-type HsDoc = Doc
-#endif
+type HsDoc a = Doc a
 
 type NDoc  = HsDoc Name
 
@@ -150,7 +147,8 @@ packageFromSource cabalPath packageConfi
             return (Nothing, PackageCollectStats packageName Nothing False False
                                             (Just ("Ghc failed to process: " <> T.pack (show e) <> " (" <> T.pack cabalPath <> ")")))
         inner ghcFlags = inGhcIO ghcFlags [Opt_Haddock] $ \ dflags -> do
-#if MIN_VERSION_haddock(2,8,0)
+#if 1
+-- MIN_VERSION_haddock(2,8,0)
             (interfaces,_) <- processModules verbose (exportedMods ++ hiddenMods) [] []
 #else
             (interfaces,_) <- createInterfaces verbose (exportedMods ++ hiddenMods) [] []
@@ -196,7 +194,9 @@ interfaceToModuleDescr dflags _dirPath p
                         (ifaceInstances interface) [] --(ifaceLocals interface)
         imports    = Map.empty --TODO
 
-#if MIN_VERSION_haddock(2,11,0)
+#if 1
+-- MIN_VERSION_haddock(2,11,0)
+
 getDoc :: Documentation Name -> Maybe NDoc
 getDoc = documentationDoc
 #else
